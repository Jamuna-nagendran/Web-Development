{"version":3,"sources":["js/index.js"],"names":["formEl","document","querySelector","emailFld","passwordFld","repasswordFld","fullnameFld","merchantFld","passwordRegEx","canSubmit","submitForm","data","console","log","validateFld","el","condition","parentElement","classList","remove","add","addEventListener","evt","preventDefault","target","reportValidity","test","value","trimLeft","getFormValues","elements","filter","type","map","name","getAttribute","checked","isFlled","every","isFilled"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":[" \n//We use the name values the select the value and manipulate them\n\n\nconst formEl = document.querySelector('form');\nconst emailFld = document.querySelector(\"input[name='email']\");\nconst passwordFld = document.querySelector(\"input[name='password']\");\nconst repasswordFld = document.querySelector(\"input[name='repassword']\");\nconst fullnameFld = document.querySelector(\"input[name='fullname']\");\nconst merchantFld = document.querySelector(\"input[name='merchant']\");\nconst passwordRegEx = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm;\n\n//We need to validate each form field and ensure that all of them are filled in\n//For individual form fields lets create a centralised flag\nlet canSubmit = false;\n//As long as this is false we will ensure that the form is not submitted\n\nconst submitForm = (data) => {\n    console.log(data);\n}\n//Validators\n\nconst validateFld = (el,condition) =>{\n    if(condition){\n        canSubmit = true;\n        el.parentElement.classList.remove('form-field-error');\n    }\n    else{\n        canSubmit = false;\n        //to show the problem and provide visual feedback, we will goto the parent node\n        el.parentElement.classList.add('form-field-error');\n    }\n};\n\nemailFld.addEventListener('keyup',function(evt) {\n    evt.preventDefault();\n    // this built in method uses the form fields type and uses built validators to return a boolean value         \n        validateFld(this,evt.target.reportValidity());\n    }\n);\n\npasswordFld.addEventListener('keyup',function(evt) {\n    evt.preventDefault();\n    validateFld(this, passwordRegEx.test(evt.target.value));\n});\n\nrepasswordFld.add('keyup', function(evt) {\n    evt.preventDefault();\n    validateFld(this, passwordFld.value === evt.target.value);\n});\n\nfullnameFld.addEventListener('keyup',function(evt) {\n    evt.preventDefault();\n    //It mandatory for the name to have a length of the name to be atleast 2 \n    //But inorder to ignore the white spaces we can use\n    evt.target.value = evt.target.value.trimLeft();\n    validateFld(this,evt.target.reportValidity());\n    \n});\n\n\n//Now, we move on to individual field validators\nformEl.addEventListener('submit',function(evt){\n    evt .preventDefault();\n    //This prevents the browser from handling the form and lets us to hijack the form and take control\n\n    const getFormValues = [...evt.target.elements]\n    .filter((el) => el.type !== 'submit' && el)\n    .map((el) =>{\n        return{\n            name: el.getAttribute('name'),\n            type: el.type,\n            value: el.type === 'checkbox' ? el.checked: el.value,\n         };\n    });\n\n    //Check if all the details are filled, we don't need to check checkbox as it is not mandatory\n    const isFlled = getFormValues\n    .filter((el) => el.type !== 'checkbox')\n    .every((el => el) !== '');\n\n    isFilled && canSubmit && submitForm(getFormValues);\n});\n"]}